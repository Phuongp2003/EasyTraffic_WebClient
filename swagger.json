{
  "openapi": "3.0.0",
  "info": {
    "title": "NEEC Server API",
    "version": "1.0.0",
    "description": "API documentation for NEEC Server"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api/advisors": {
      "get": {
        "summary": "Get all advisors",
        "tags": [
          "Advisors"
        ],
        "responses": {
          "200": {
            "description": "List of advisors"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new advisor",
        "tags": [
          "Advisors"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advisor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created advisor"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/advisors/{id}": {
      "get": {
        "summary": "Get an advisor by ID",
        "tags": [
          "Advisors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The advisor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The advisor data"
          },
          "404": {
            "description": "Advisor not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update an advisor by ID",
        "tags": [
          "Advisors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The advisor ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advisor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated advisor"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an advisor by ID",
        "tags": [
          "Advisors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The advisor ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/advisor-group": {
      "get": {
        "summary": "Get all advisor groups",
        "tags": [
          "AdvisorGroups"
        ],
        "responses": {
          "200": {
            "description": "List of advisor groups"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new advisor group",
        "tags": [
          "AdvisorGroups"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisorGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created advisor group"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/advisor-group/{id}": {
      "get": {
        "summary": "Get an advisor group by ID",
        "tags": [
          "AdvisorGroups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "The advisor group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The advisor group data"
          },
          "404": {
            "description": "Advisor group not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update an advisor group by ID",
        "tags": [
          "AdvisorGroups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "The advisor group ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisorGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated advisor group"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an advisor group by ID",
        "tags": [
          "AdvisorGroups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "The advisor group ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/articles": {
      "get": {
        "summary": "Get all articles",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of tags to filter articles (e.g. \"tag1,tag2,tag3\")",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Return filtered articles or all articles if no tags provided."
          }
        }
      }
    },
    "/api/articles/{slug}": {
      "get": {
        "summary": "Get article by slug",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The article slug"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the article with the given slug."
          },
          "404": {
            "description": "Article not found"
          }
        }
      }
    },
    "/api/articles/{slug}/view": {
      "patch": {
        "summary": "Increment view count of an article",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The article slug"
          }
        ],
        "responses": {
          "200": {
            "description": "Increment the view count of the article."
          },
          "404": {
            "description": "Article not found"
          }
        }
      }
    },
    "/api/articlesManagement": {
      "post": {
        "summary": "Create a new article",
        "tags": [
          "ArticlesManagement"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleDetail"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Article created successfully"
          },
          "400": {
            "description": "Error creating article"
          }
        }
      }
    },
    "/api/articlesManagement/{slug}": {
      "put": {
        "summary": "Update an existing article",
        "tags": [
          "ArticlesManagement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The article ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article updated successfully"
          },
          "400": {
            "description": "Error updating article"
          }
        }
      }
    },
    "/api/articlesManagement/{id}": {
      "delete": {
        "summary": "Delete an article",
        "tags": [
          "ArticlesManagement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The article ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Article deleted successfully"
          },
          "400": {
            "description": "Error deleting article"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string",
                    "description": "Authentication token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The access and refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "summary": "Refresh the access token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The new access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        }
      }
    },
    "/api/contact/from-survey-response": {
      "post": {
        "summary": "Create a contact from a survey response",
        "tags": [
          "Contacts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "surveyResponseId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/contact/survey": {
      "get": {
        "summary": "Get all contacts by survey ID",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "surveyId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/contact/survey/contact": {
      "get": {
        "summary": "Get a contact by survey ID and contact ID",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "surveyId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The contact ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The contact data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/contact": {
      "get": {
        "summary": "Get all contacts with pagination",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "itemsPerPage",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "currentPage",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Current page number"
          }
        ],
        "responses": {
          "200": {
            "description": "List of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/countries": {
      "get": {
        "summary": "Get all countries",
        "tags": [
          "Countries"
        ],
        "responses": {
          "200": {
            "description": "List of countries"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new country",
        "tags": [
          "Countries"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created country"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/countries/{id}": {
      "get": {
        "summary": "Get a country by ID",
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The country ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The country data"
          },
          "404": {
            "description": "Country not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a country by ID",
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The country ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated country"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a country by ID",
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The country ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/customer/survey-response": {
      "post": {
        "summary": "Save a survey response",
        "tags": [
          "SurveyResponses"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyResponse"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created survey response"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/excel-export/contacts": {
      "get": {
        "summary": "Export contacts to an Excel file",
        "tags": [
          "ExcelExport"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "surveyId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the survey to filter contacts"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "The start date for filtering contacts"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "The end date for filtering contacts"
          }
        ],
        "responses": {
          "200": {
            "description": "The Excel file containing contacts",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/excel-export/survey-responses": {
      "get": {
        "summary": "Export survey responses to an Excel file",
        "tags": [
          "ExcelExport"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "surveyId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the survey to filter responses"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "The start date for filtering survey responses"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "The end date for filtering survey responses"
          }
        ],
        "responses": {
          "200": {
            "description": "The Excel file containing survey responses",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "summary": "Get a role by ID",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "The role ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "put": {
        "summary": "Update a role by ID",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "The role ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a role by ID",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "The role ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/api/roles": {
      "post": {
        "summary": "Create a new role",
        "tags": [
          "Roles"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all roles",
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "List of roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/schools": {
      "get": {
        "summary": "Get all schools",
        "tags": [
          "Schools"
        ],
        "responses": {
          "200": {
            "description": "List of schools",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/School"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new school",
        "tags": [
          "Schools"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created school",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/School"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/schools/{id}": {
      "get": {
        "summary": "Get a school by ID",
        "tags": [
          "Schools"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The school ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The school data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/School"
                }
              }
            }
          },
          "404": {
            "description": "School not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a school by ID",
        "tags": [
          "Schools"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The school ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated school",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/School"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a school by ID",
        "tags": [
          "Schools"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The school ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/survey": {
      "get": {
        "summary": "Get all surveys",
        "tags": [
          "Surveys"
        ],
        "responses": {
          "200": {
            "description": "List of surveys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Survey"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new survey",
        "tags": [
          "Surveys"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created survey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/survey/{id}": {
      "get": {
        "summary": "Get a survey by ID",
        "tags": [
          "Surveys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The survey data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          },
          "404": {
            "description": "Survey not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a survey by ID",
        "tags": [
          "Surveys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated survey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a survey by ID",
        "tags": [
          "Surveys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Survey deleted successfully"
          },
          "404": {
            "description": "Survey not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/survey/{surveyId}/questions": {
      "get": {
        "summary": "Get questions for a survey",
        "tags": [
          "Surveys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "surveyId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of survey questions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SurveyQuestion"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new survey question",
        "tags": [
          "Surveys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "surveyId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyQuestion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created survey question",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyQuestion"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/survey/questions/{id}": {
      "put": {
        "summary": "Update a survey question by ID",
        "tags": [
          "Surveys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey question ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyQuestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated survey question",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyQuestion"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/survey-response/survey": {
      "get": {
        "summary": "Get all survey responses by survey ID",
        "tags": [
          "SurveyResponses"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "surveyId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of survey responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SurveyResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/survey-response/survey/response": {
      "get": {
        "summary": "Get a survey response by survey ID and response ID",
        "tags": [
          "SurveyResponses"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "surveyId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The survey ID"
          },
          {
            "in": "query",
            "name": "surveyResponseId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The response ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The survey response data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Survey response not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/tags": {
      "get": {
        "summary": "Get all tags",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "Return all tags.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new tag",
        "tags": [
          "Tags"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}": {
      "get": {
        "summary": "Get tag by ID",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The tag ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the tag with the given ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Tag not found"
          }
        }
      },
      "put": {
        "summary": "Update a tag by ID",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The tag ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a tag by ID",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The tag ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/api/users/email/{email}": {
      "get": {
        "summary": "Get a user by email",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user email"
          }
        ],
        "responses": {
          "200": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/api/visa-types": {
      "get": {
        "summary": "Get all visa types",
        "tags": [
          "VisaTypes"
        ],
        "responses": {
          "200": {
            "description": "List of visa types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VisaType"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new visa type",
        "tags": [
          "VisaTypes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisaType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created visa type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisaType"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/visa-types/{id}": {
      "get": {
        "summary": "Get a visa type by ID",
        "tags": [
          "VisaTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The visa type ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The visa type data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisaType"
                }
              }
            }
          },
          "404": {
            "description": "Visa type not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a visa type by ID",
        "tags": [
          "VisaTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The visa type ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisaType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated visa type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisaType"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a visa type by ID",
        "tags": [
          "VisaTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The visa type ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/file/upload": {
      "post": {
        "summary": "Upload an image file",
        "tags": [
          "File Upload"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "asset_id": {
                      "type": "string"
                    },
                    "public_id": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer"
                    },
                    "version_id": {
                      "type": "string"
                    },
                    "signature": {
                      "type": "string"
                    },
                    "width": {
                      "type": "integer"
                    },
                    "height": {
                      "type": "integer"
                    },
                    "format": {
                      "type": "string"
                    },
                    "resource_type": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "bytes": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    },
                    "etag": {
                      "type": "string"
                    },
                    "placeholder": {
                      "type": "boolean"
                    },
                    "url": {
                      "type": "string"
                    },
                    "secure_url": {
                      "type": "string"
                    },
                    "original_filename": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No file uploaded"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdvisorGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the advisor group"
          },
          "name": {
            "type": "string",
            "description": "The name of the advisor group"
          }
        },
        "required": [
          "name"
        ]
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the country"
          },
          "name": {
            "type": "string",
            "description": "The name of the country"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the country was created"
          }
        },
        "required": [
          "name"
        ]
      },
      "Survey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SurveyQuestion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "surveyId": {
            "type": "string"
          },
          "question": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "single-choice",
              "multiple-choice"
            ]
          },
          "options": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SurveyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "surveyId": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "answers": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Advisors",
      "description": "Advisor management"
    },
    {
      "name": "AdvisorGroups",
      "description": "Advisor Group management"
    },
    {
      "name": "Articles",
      "description": "Article management"
    },
    {
      "name": "ArticlesManagement",
      "description": "Article management for CMS"
    },
    {
      "name": "Auth",
      "description": "Authentication management"
    },
    {
      "name": "Contacts",
      "description": "Contact management"
    },
    {
      "name": "Countries",
      "description": "Country management"
    },
    {
      "name": "SurveyResponses",
      "description": "Survey response management"
    },
    {
      "name": "ExcelExport",
      "description": "Export to Excel"
    },
    {
      "name": "Roles",
      "description": "Role management"
    },
    {
      "name": "Schools",
      "description": "School management"
    },
    {
      "name": "Surveys",
      "description": "Survey management"
    },
    {
      "name": "Tags",
      "description": "Tag management"
    },
    {
      "name": "Users",
      "description": "User management"
    },
    {
      "name": "VisaTypes",
      "description": "Visa type management"
    }
  ]
}
